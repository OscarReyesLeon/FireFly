# Generated by Django 3.2 on 2024-01-25 22:23

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('clients', '0001_initial'),
        ('administration', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='OrderModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('key_order', models.CharField(help_text='Folio de la orden', max_length=6, unique=True, verbose_name='Folio de la orden')),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'Remisión (Ingreso)'), (2, 'Autorización y asignación de camión'), (3, 'Cáptura de salida'), (4, 'Salida del almacén'), (5, 'Entregando'), (6, 'Entrada a almacén'), (7, 'Cáptura de entrada'), (8, 'Finalizado')], default=1, help_text='Estatus del pedido', verbose_name='Estatus del pedido')),
                ('invoice_status', models.PositiveSmallIntegerField(choices=[(0, 'Sin factura'), (1, 'Proceso con factura'), (2, 'Por facturar'), (3, 'Facturado')], default=0, help_text='Estatus del proceso de factura', verbose_name='Estatus del proceso de factura')),
                ('autorization', models.BooleanField(default=False, help_text='Autorización para realizar la orden', verbose_name='Autorización')),
                ('delivery_date_estimated', models.DateField(blank=True, help_text='Fecha de entrega estimada de la orden', null=True, verbose_name='Fecha de entrega estimada')),
                ('delivery_date', models.DateField(blank=True, help_text='Fecha de entrega de la orden', null=True, verbose_name='Fecha de entrega')),
                ('fuel_liters', models.FloatField(blank=True, default=0, help_text='Litros de combustible que se utilizaron en el traslado', null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Litros de combustible')),
                ('address', models.ForeignKey(blank=True, help_text='Dirección a la que se realizará el traslado', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='address_order', to='clients.clientaddressmodel', verbose_name='Dirección')),
                ('client', models.ForeignKey(help_text='Cliente al que se le realizará el traslado', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='client', to='clients.clientmodel', verbose_name='Cliente')),
                ('driver', models.ForeignKey(help_text='Conductor que realizará el traslado', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='driver_transfer', to='administration.drivermodel', verbose_name='Conductor')),
                ('fuel_pump', models.ForeignKey(blank=True, help_text='Bombas de combustible que se utilizará', null=True, on_delete=django.db.models.deletion.PROTECT, to='administration.fuelpumpmodel', verbose_name='Bombas de combustible que se utilizará')),
                ('user_create', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ordermodel_user_create', to=settings.AUTH_USER_MODEL)),
                ('user_update', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ordermodel_user_update', to=settings.AUTH_USER_MODEL)),
                ('vehicle', models.ForeignKey(blank=True, help_text='Vehículo que se utilizará para el traslado', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='vehicle', to='administration.vehiclemodel', verbose_name='Vehículo')),
            ],
            options={
                'verbose_name': 'Pedido',
                'verbose_name_plural': 'Pedidos',
                'db_table': 'orders_order',
                'ordering': ['key_order'],
            },
        ),
        migrations.CreateModel(
            name='LogOrderModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'Remisión (Ingreso)'), (2, 'Autorización y asignación de camión'), (3, 'Cáptura de salida'), (4, 'Salida del almacén'), (5, 'Entregando'), (6, 'Entrada a almacén'), (7, 'Cáptura de entrada'), (8, 'Finalizado')], default=1)),
                ('api_gps', models.JSONField(blank=True, null=True)),
                ('odometer', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('velocity', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orders.ordermodel')),
                ('user_create', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='logordermodel_user_create', to=settings.AUTH_USER_MODEL)),
                ('user_update', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='logordermodel_user_update', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InvoiceModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('key_invoice', models.CharField(help_text='Folio de factura', max_length=50, unique=True, verbose_name='Folio de factura')),
                ('payment_method', models.PositiveSmallIntegerField(choices=[(0, 'Efectivo'), (1, 'Tarjeta de crédito'), (2, 'Tarjeta de débito'), (3, 'Transferencia'), (4, 'Cheque'), (5, 'Depósito'), (6, 'Otro')], default=0, help_text='Método de pago', verbose_name='Método de pago')),
                ('total', models.FloatField(default=0, help_text='Total de la factura', validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Total de la factura')),
                ('subtotal', models.FloatField(default=0, help_text='Subtotal de la factura', validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Subtotal de la factura')),
                ('iva', models.FloatField(default=0, help_text='IVA de la factura', validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='IVA de la factura')),
                ('description', models.TextField(blank=True, help_text='Descripción o notas asociadas a la factura', null=True, verbose_name='Descripción/Notas de factura')),
                ('order', models.OneToOneField(help_text='Pedido al que pertenece la factura', on_delete=django.db.models.deletion.CASCADE, to='orders.ordermodel', verbose_name='Pedido')),
                ('user_create', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='invoicemodel_user_create', to=settings.AUTH_USER_MODEL)),
                ('user_update', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='invoicemodel_user_update', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Factura',
                'verbose_name_plural': 'Facturas',
                'db_table': 'orders_invoice',
                'ordering': ['key_invoice'],
            },
        ),
        migrations.CreateModel(
            name='DetailOrderModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('quantity_order', models.FloatField(default=0, help_text='Cantidad solicitada', validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Cantidad solicitada')),
                ('quantity_transfer', models.FloatField(blank=True, default=0, help_text='Cantidad a trasladar', null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Cantidad a trasladar')),
                ('ton_out', models.FloatField(blank=True, default=0, help_text='Peso con el que salió el vehículo de la planta', null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Peso de sálida (en toneladas)')),
                ('ton_receiver', models.FloatField(blank=True, default=0, help_text='Peso que entregó el vehiculo al cliente', null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='Peso recibido por el cliente (en toneladas)')),
                ('order', models.ForeignKey(help_text='Pedido al que pertenece el detalle', on_delete=django.db.models.deletion.CASCADE, related_name='order_detail', to='orders.ordermodel', verbose_name='Pedido')),
                ('product', models.ForeignKey(help_text='Producto que se agregará al pedido', on_delete=django.db.models.deletion.PROTECT, related_name='product', to='administration.productmodel', verbose_name='Producto')),
                ('truck', models.ForeignKey(blank=True, help_text='Remolque que se utilizará en el traslado', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='truck_detail_transfer', to='administration.truckvehiclemodel', verbose_name='Remolque que se utilizará')),
                ('user_create', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='detailordermodel_user_create', to=settings.AUTH_USER_MODEL)),
                ('user_update', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='detailordermodel_user_update', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
